{"version":3,"file":"wesCreateRun.js","sourceRoot":"","sources":["../../../../../src/components/wes-create-run/definition/wesCreateRun.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,WAAW,EACX,IAAI,EACJ,aAAa,EACb,UAAU,GACX,MAAM,yBAAyB,CAAC;AACjC,OAAO,QAAQ,MAAM,4BAA4B,CAAC;AAClD,OAAO,MAAM,MAAM,0BAA0B,CAAC;AAC9C,OAAO,EAAE,YAAY,EAAE,MAAM,kCAAkC,CAAC;AAOjD,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,WAAW;IAAtC;;QACb,mCAAmC;QAC7B,YAAO,GAAG,EAAE,CAAC;QAEP,SAAI,GAAa,IAAI,QAAQ,EAAE,CAAC;QAEhC,aAAQ,GAAQ,EAAE,CAAC;QAE/B,gBAAW,GAAG,CAAC,KAAY,EAAE,EAAE;YAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,MAA0B,CAAC;YAC/C,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;YAEvB,yDAAyD;YACzD,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,EAAE;gBACzB,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC,KAAiB,EAAE;oBAC1C,mGAAmG;oBACnG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;wBACvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;qBACxB;oBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAC9B;aACF;iBAAM;gBACL,mGAAmG;gBACnG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACxB;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;aACrC;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,KAAK,IAAI,EAAE;YACxB,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;CAAA,CAAA;AAhCO;IAAL,IAAI;6CAAc;AAEP;IAAX,UAAU;0CAAiC;AAEhC;IAAX,UAAU;8CAAoB;AANZ,YAAY;IALhC,aAAa,CAAC;QACb,IAAI,EAAE,iCAAiC;QACvC,QAAQ;QACR,MAAM;KACP,CAAC;GACmB,YAAY,CAkChC;eAlCoB,YAAY","sourcesContent":["import {\n  FASTElement,\n  attr,\n  customElement,\n  observable,\n} from '@microsoft/fast-element';\nimport template from './wesCreateRun.template.js';\nimport styles from './wesCreateRun.styles.js';\nimport { postWorkflow } from '../../../data/Workflow/wesGet.js';\n\n@customElement({\n  name: 'ecc-client-ga4gh-wes-create-run',\n  template,\n  styles,\n})\nexport default class WESCreateRun extends FASTElement {\n  // Base URL, provided by app author\n  @attr baseURL = '';\n\n  @observable data: FormData = new FormData();\n\n  @observable response: any = {};\n\n  handleInput = (event: Event) => {\n    const input = event.target as HTMLInputElement;\n    const { name } = input;\n\n    // If it's a file input, append each file to the FormData\n    if (input.type === 'file') {\n      for (const file of input.files as FileList) {\n        // Check if the key exists in the FormData, and if so, delete it before appending the updated value\n        if (this.data.has(name)) {\n          this.data.delete(name);\n        }\n        this.data.append(name, file);\n      }\n    } else {\n      // Check if the key exists in the FormData, and if so, delete it before appending the updated value\n      if (this.data.has(name)) {\n        this.data.delete(name);\n      }\n      this.data.append(name, input.value);\n    }\n  };\n\n  handleSubmit = async () => {\n    const response = await postWorkflow(this.baseURL, this.data);\n    this.response = response;\n  };\n}\n"]}