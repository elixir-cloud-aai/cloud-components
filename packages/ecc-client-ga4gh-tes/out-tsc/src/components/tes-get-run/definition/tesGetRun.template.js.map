{"version":3,"file":"tesGetRun.template.js","sourceRoot":"","sources":["../../../../../src/components/tes-get-run/definition/tesGetRun.template.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  provideFASTDesignSystem,\n  fastAccordionItem,\n  fastSkeleton,\n  fastButton,\n  fastBadge,\n} from \"@microsoft/fast-components\";\nimport { html, when, repeat } from \"@microsoft/fast-element\";\nimport TESGetRun from \"./tesGetRun.js\";\n\nprovideFASTDesignSystem().register(\n  fastSkeleton(),\n  fastButton(),\n  fastBadge(),\n  fastAccordionItem({\n    collapsedIcon: `<svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"100%\"\n      height=\"16\"\n      fill=\"black\"\n      class=\"bi bi-arrows-expand\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M1 8a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 0 1h-13A.5.5 0 0 1 1 8ZM7.646.146a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 1.707V5.5a.5.5 0 0 1-1 0V1.707L6.354 2.854a.5.5 0 1 1-.708-.708l2-2ZM8 10a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 0 1 .708-.708L7.5 14.293V10.5A.5.5 0 0 1 8 10Z\"\n      />\n    </svg>`,\n    expandedIcon: `<svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"100%\"\n      fill=\"black\"\n      class=\"bi bi-arrows-collapse\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M1 8a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 0 1h-13A.5.5 0 0 1 1 8Zm7-8a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 4.293V.5A.5.5 0 0 1 8 0Zm-.5 11.707-1.146 1.147a.5.5 0 0 1-.708-.708l2-2a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 11.707V15.5a.5.5 0 0 1-1 0v-3.793Z\"\n      />\n    </svg>`,\n  })\n);\n\nconst template = html<TESGetRun>`\n  <fast-accordion-item>\n    <span slot=\"heading\" class=\"slot-heading\">\n      ${(x) => html`\n        <div class=\"collapsed-container\">\n          <div class=\"right\">\n            <span class=\"id\">\n              <span class=\"title\">RUN ID:</span>\n              <span>${x.id}</span>\n            </span>\n          </div>\n          <div class=\"left\">\n            <div class=\"status-badge\">\n              <div>\n                <style>\n                  /* For example purposes only. App authors needs to define */\n                  fast-badge {\n                    --badge-fill-error: #d32f2f;\n                    --badge-fill-processing: #ffc107;\n                    --badge-fill-cancelled: #cccccc;\n                    --badge-fill-complete: #4caf50;\n                    --badge-fill-transparent: transparent;\n                    --badge-color-black: #000000;\n                    --badge-color-white: #ffffff;\n                  }\n                </style>\n                ${when(\n                  () => x?.state === \"COMPLETE\",\n                  html`\n                    <fast-badge fill=\"complete\" color=\"white\"\n                      >${x.state}</fast-badge\n                    >\n                  `\n                )}\n                ${when(\n                  () => x?.state === \"SYSTEM_ERROR\",\n                  html`\n                    <fast-badge fill=\"error\" color=\"white\"\n                      >${x.state}</fast-badge\n                    >\n                  `\n                )}\n                ${when(\n                  () => x?.state === \"PROCESSING\",\n                  html`\n                    <fast-badge fill=\"processing\" color=\"white\"\n                      >${x.state}</fast-badge\n                    >\n                  `\n                )}\n                ${when(\n                  () => x?.state === \"CANCELED\",\n                  html`\n                    <fast-badge fill=\"cancelled\" color=\"white\"\n                      >${x.state}</fast-badge\n                    >\n                  `\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      `}\n    </span>\n    ${when(\n      (x) => x.isLoading,\n      html` <fast-skeleton\n          style=\"border-radius: 4px; margin-top: 10px; height: 20px; width: 20%\"\n          shape=\"rect\"\n        ></fast-skeleton>\n        <fast-skeleton\n          style=\"border-radius: 4px; margin-top: 10px; height: 20px; width: 40%\"\n          shape=\"rect\"\n        ></fast-skeleton>\n        <fast-skeleton\n          style=\"border-radius: 4px; margin-top: 10px; height: 20px; width:25%\"\n          shape=\"rect\"\n        ></fast-skeleton>\n        <fast-skeleton\n          style=\"border-radius: 4px;height: 80px;margin-top: 20px;margin-bottom: 10px;\"\n          shape=\"rect\"\n        ></fast-skeleton>\n        <fast-skeleton\n          style=\"border-radius: 4px;height: 80px;margin-top: 20px;margin-bottom: 10px;\"\n          shape=\"rect\"\n        ></fast-skeleton>`\n    )}\n    ${when(\n      (x) => !x.isLoading,\n      html<TESGetRun>`\n        <div class=\"expanded-container\">\n          <div class=\"meta-data\">\n            <div class=\"meta-data-left\">\n              <div class=\"name\">\n                <span class=\"title\"> Name: </span>\n                ${(x) => x.data.name}\n              </div>\n              <div class=\"description\">\n                <span class=\"title\"> Description: </span>\n                ${(x) => x.data.description}\n              </div>\n              <div class=\"creation-time\">\n                <span class=\"title\"> Creation Time: </span>\n                ${(x) => x.data.creation_time}\n              </div>\n            </div>\n            ${when(\n              (x) => x.state === \"RUNNING\",\n              html`<div class=\"meta-data-right\">\n                <fast-button\n                  class=\"delete-button\"\n                  @click=${(x) => x.handleDelete()}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    fill=\"currentColor\"\n                    class=\"bi bi-trash\"\n                    viewBox=\"0 0 16 16\"\n                  >\n                    <path\n                      d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z\"\n                    />\n                    <path\n                      d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z\"\n                    />\n                  </svg>\n                </fast-button>\n              </div>`\n            )}\n          </div>\n          <div class=\"executors\">\n            <div class=\"section-heading\">\n              <span class=\"title\">Executors: </span>\n            </div>\n            ${repeat(\n              (x) => x.data.executors,\n              html`\n                <div class=\"executor\">\n                  <div class=\"image\">\n                    <span class=\"title\">Image: </span>\n                    ${(executor) => executor.image}\n                  </div>\n                  <div class=\"command-list\">\n                    <span class=\"title\">Commands: </span>\n\n                    ${repeat(\n                      (executor) => executor.command,\n                      html`<li class=\"command\">${(x) => x}</li>`\n                    )}\n                  </div>\n                </div>\n              `\n            )}\n          </div>\n          <div class=\"logs\">\n            <div class=\"section-heading\">\n              <span class=\"title\"> Logs </span>\n            </div>\n            ${when(\n              (x) => x.data.logs && x.data.logs.length > 0,\n              html`\n                ${repeat(\n                  (x) => x.data.logs,\n                  html`\n                    <div class=\"log-entry\">\n                      <div class=\"start-time\">\n                        <span class=\"title\">Start Time:</span> ${(x) =>\n                          x.start_time}\n                      </div>\n                      <div class=\"end-time\">\n                        <span class=\"title\">End Time:</span>\n                        ${(x) => x.end_time}\n                      </div>\n                      ${when(\n                        (x) => x.logs && x.logs.length > 0,\n                        html`\n                          <div class=\"stdout\">\n                            <span class=\"title\">Stdout:</span>\n                            ${(x) => x.logs[0].stdout}\n                          </div>\n                          <div class=\"exit-code\">\n                            <span class=\"title\">Exit Code: </span>\n                            ${(x) => x.logs[0].exit_code}\n                          </div>\n                        `\n                      )}\n                      ${when(\n                        (x) => x.metadata && x.metadata.USER_ID,\n                        html`\n                          <div class=\"user-id\">\n                            <span class=\"title\">Metadata User ID: </span>\n                            ${(x) => x.metadata.USER_ID}\n                          </div>\n                        `\n                      )}\n                    </div>\n                  `\n                )}\n              `\n            )}\n          </div>\n        </div>\n      `\n    )}\n  </fast-accordion-item>\n`;\n\nexport default template;\n"]}