name: PR Evaluation & Deployment Workflow

on:
  pull_request:
    types: edited
    branches: ['main']
  push:
    branches: ['main']

jobs:

  lint_pr: 
    name: Validate PR title
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Configure which types are allowed (newline-delimited).
          # Default: https://github.com/commitizen/conventional-commit-types
          types: |
            fix
            feat
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          # Configure that a scope must always be provided.
          requireScope: true
          # Configure additional validation for the subject based on a regex.
          # This example ensures the subject doesn't start with an uppercase character & has more than 50 chars.
          subjectPattern: ^(?![A-Z])(?=.{1,50}$).+$
          # If `subjectPattern` is configured, you can use this property to override
          # the default error message that is shown when the pattern doesn't match.
          # The variables `subject` and `title` can be used within the message.
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character & not have more than 50 characters.

  linters:
    name: Linting checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install
      
      - name: Run linters
        run: npm run lint

  tests:
    name: Test checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install
      
      - name: Run tests
        run: npm run test